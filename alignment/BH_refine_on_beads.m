function [ to_few_beads ] = BH_refine_on_beads(baseName,NX,NY,thickness,pixelSize,bead_diameter,min_sampling_rate)



bead_size=bead_diameter./pixelSize;

pixelSizeInNanometers=pixelSize./10;
ptSizeX=128;
ptSizeY=128;

first_run = true;
to_few_beads = false;
% So it can be tested if desired, but an initial look did not seem
% promising. The x_tilt produces resonable results that look a little more
% contrasty, but I think it is a low-pass effect. The x_stretch does all
% kinds of weird shit.
x_tilt_option = [0,3,0,3];
x_stretch_option = [0,3,0,3];

% The patch tracking should be good enough for findBeads3d to get most of
% the beads. The cost of which is creating a 3d to pick them, return to
% findBeads3d this many times
n_findBeads3d = 4;

% Beads from findBeads3d are checked for gaps with beadtrack, otherwise the
% bead model from the previous iterations is used.

% Bead positions are fit using BH_fitBeads and updated by their residual
% after tiltalign this many times in each macroloop
n_ali_loops = 5;

doLocal = '';

% Step down in samping rate

sampling_step=2;
for imageBinning = [15:-sampling_step:min_sampling_rate] 
  
    
  if first_run 
    input_name=baseName;
    output_name=sprintf('%s_%d',baseName,imageBinning);  
    last_binning=imageBinning;
    first_run=false;
    xTiltOption = '-XAXISTILT 0.0 ';
    z_factor_file = '';
    local_file = sprintf('-LOCALFILE %s.local ',input_name);
  else
    input_name=sprintf('%s_%d',baseName,last_binning);  
    output_name=sprintf('%s_%d',baseName,imageBinning); 
    last_binning=imageBinning;
    xTiltOption = sprintf('-XTILTFILE %s.Xtlt ',input_name);
    z_factor_file = sprintf('-ZFACTORFILE %s.Zfactor ', input_name);
    if isempty(doLocal)
      local_file = '';
    else
      local_file = sprintf(' -LOCALFILE %s.local ' , input_name);     
    end
  end

  % Create a new stack at each binning
  [ fail ] = system(sprintf( ...
  ['newstack ', ...
    '-InputFile  %s.fixed ', ... % Always the same input (the preprocessed stack)
    '-OutputFile	%s_3dfind.ali ', ... 
    '-TransformFile	%s.xf ', ... % Coming from the last iteration
    '-ImagesAreBinned	1.0 ', ... % Input image binning is always 1
    '-BinByFactor %d'],baseName,output_name,input_name,imageBinning)); 

  if (fail) 
    error('failed in newstack')  
  end

  if ( n_findBeads3d > 0)
    n_findBeads3d = n_findBeads3d - 1;

    % The defaults are taken from etomo on whatever tilt I had developed
    % this on - may not be optimal. Log option can produce problems if not
    % using preprocessed stack.
    [ fail ] = system(sprintf([...
    'tilt ' ...
      '-InputProjections %s_3dfind.ali ' ...
      '-OutputFile %s_3dfind.rec ' ...
      '-TILTFILE %s.tlt ' ...
      '-IMAGEBINNED %d ' ...
      '-THICKNESS %d ' ...
      '-RADIAL 0.35,0.035 ' ...
      '-FalloffIsTrueSigma 1 ' ...
      '%s ' ...
      '-MODE 2 ' ...
      '-UseGPU 0 ' ...
      '-ActionIfGPUFails 1,2 ' ...
      '-OFFSET 0.0 ' ...
      '-SHIFT 0.0 0.0 ' ...
      '-PERPENDICULAR ' ...
      '-FULLIMAGE %d,%d %s %s'],output_name,output_name,...
                          input_name,imageBinning,thickness,...
                          xTiltOption,NX,NY,local_file,z_factor_file));

    if (fail) 
      error('failed in creating a 3d to look for beads')  
    end

    [ fail ] = system(sprintf([...
    'findbeads3d ' ...
      '-InputFile	%s_3dfind.rec ' ...
      '-OutputFile	%s_3dfind.mod ' ...
      '-BeadSize	%f ' ...
      '-MinRelativeStrength	0.05 ' ...
      '-MaxNumBeads 200 ' ... % It would be good to be able to specify these.
      '-StorageThreshold	0.0 ' ...
      '-FallbackThresholds 0.1,0.1 ' ...
      '-MinSpacing	0.8 ' ...
      '-BinningOfVolume	%d'], ...
      output_name,output_name,bead_size,imageBinning ...
      ));

      if (fail) 
        error('failed in findbeads3d')  
      end
    
      % The output is a 3d model, with YZ flipped. Project it perpendicular
      % into natural orientation.
      [ fail ] = system(sprintf([...
        'tilt ' ...
        '-InputProjections %s_3dfind.ali ' ...
        '-OutputFile %s.erase ' ...
        '-IMAGEBINNED %d ' ...
        '-TILTFILE %s.tlt ' ...
        '-THICKNESS %d ' ...ls 
        '-RADIAL 0.35,0.035 ' ...
        '-FalloffIsTrueSigma 1 ' ...
        '%s ' ...
        '-UseGPU 0 ' ...
        '-ActionIfGPUFails 1,2 ' ...
        '-OFFSET 0.0 ' ...
        '-SHIFT 0.0,0.0 ' ...
        '-ProjectModel %s_3dfind.mod ' ...
        '-FULLIMAGE %d,%d ' ...
        '-PERPENDICULAR  ' ...
        '-MODE 2 %s %s'], output_name,output_name,imageBinning,...
                    input_name,thickness,...
                    xTiltOption,output_name,NX,NY,local_file,z_factor_file));

        if (fail) 
          error('failed in tilt')  
        end

      % Fix anything missed in findbeads3d
      [ fail ] = system(sprintf([...
      'beadtrack ' ...
        '-InputSeedModel %s.erase ' ...
        '-OutputModel %s_beadtrack.fid ' ...
        '-ImageFile %s_3dfind.ali ' ...
        '-ImagesAreBinned %d ' ...
        '-PixelSize %f ' ...
        '-BeadDiameter %f ' ...
        '-RoundsOfTracking 3 ' ...
        '-BoxSizeXandY  %d,%d ' ...
        '-MinBeadsInArea 3 ' ...
        '-MinOverlapBeads 1 ' ...
        '-UnsplitFirstRound ' ...
        '-LocalAreaTracking ' ...
        '-LocalAreaTargetSize %d ' ...
        '-RotationAngle 0.0 ' ...
        '-TiltFile %s.tlt ' ...
        '-TiltDefaultGrouping 5 ' ...
        '-MagDefaultGrouping 1 ' ...
        '-RotDefaultGrouping 1 ' ...
        '-LowPassCutoffInverseNm 0.71 '], output_name,output_name,output_name,imageBinning,...
        pixelSizeInNanometers,bead_size,ptSizeX,ptSizeY,floor(512/imageBinning),...
        input_name ...
        ));

        if (fail)       
          error('Failed in beadtrack')  
        end
    
  else
    
    [fail] = system(sprintf('imodtrans -i %s_3dfind.ali -2 %s.tltxf_Scaled %s_fitbyResid_%d.fid %s_beadtrack.fid', ...
                                            output_name,  input_name,     input_name, n_ali_loops, output_name));

    if (fail) 
      error('failed in projected model from previous tiltalign')  
    end
    

  end
    

  for aliLoop = 1:n_ali_loops
    if aliLoop > 1
      sprintf('MOVE BY RESIDUAL\n');
      % use the residual from the previous, which has a header line
%       cmd = sprintf('awk ''FNR==NR{if(FNR>1) {a[FNR-1]=$1-$4 FS $2-$5};next}{ print $1, a[FNR+1],$4}'' %s.resid_%d %s_beadtrack.fid.txt > %s_byResid_%d.txt',output_name,aliLoop-1,output_name,output_name,aliLoop);
      cmd = sprintf('awk ''FNR==NR{a[FNR]=$1;next}{ if(FNR>1) print a[FNR-1],$1+$4 FS $2+$5 FS $3}'' %s_fit.fid.txt %s.resid_%d  > %s_byResid_%d.txt',output_name,output_name,aliLoop-1,output_name,aliLoop);

      system(cmd);
      system(sprintf('point2model -circle %d %s_byResid_%d.txt %s_byResid_%d.fid',floor(bead_size/imageBinning),output_name,aliLoop,output_name,aliLoop));
      model_to_align = sprintf('%s_fitbyResid_%d.fid',output_name,aliLoop);
      [~, nBeads] =   BH_fitBeads(pixelSize,bead_diameter,imageBinning,...
                      sprintf('%s_3dfind.ali',output_name),...
                      sprintf('%s_byResid_%d.fid',output_name,aliLoop),...
                      model_to_align...
                      );
    else
      model_to_align = sprintf('%s_fit.fid',output_name);
      [~, nBeads] =   BH_fitBeads(pixelSize,bead_diameter,imageBinning,...
                      sprintf('%s_3dfind.ali',output_name),...
                      sprintf('%s_beadtrack.fid',output_name),...
                      model_to_align...
                      );
    end

    if (nBeads < 5)
      to_few_beads = true;
      return;
    end

    if (nBeads < 11)
      doLocal = '';
    else
      doLocal =  '-LocalAlignments	';
    end


    % No need to run tiltalign on the last iteration, b/c we use the 2d
    % model file for the input to the next iter.
    if (aliLoop < n_ali_loops)

      [ fail ] = system(sprintf([...
      'tiltalign ' ...
        '-ModelFile	%s ' ...
        '-ImageFile	%s_3dfind.ali ' ...
        '-ImagesAreBinned	%d ' ...
        '-OutputModelFile	%s.3dmod ' ...
        '-OutputResidualFile	%s.resid_%d ' ...
        '-OutputFidXYZFile	%sfid.xyz ' ...
        '-OutputTiltFile	%s.tlt ' ...
        '-OutputTransformFile	%s.tltxf_nonScaled ' ...
        '-OutputXAxisTiltFile %s.Xtlt ' ...
        '-OutputZFactorFile %s.Zfactor ' ...
        '-RotationAngle	0.0 ' ...
        '-TiltFile	%s.tlt ' ...
        '-RotOption	1 ' ...
        '-RotDefaultGrouping	3 ' ...
        '-TiltOption 5 ' ...
        '-TiltDefaultGrouping	3 ' ...
        '-XTiltOption %d ' ...
        '-XTiltDefaultGrouping %d ' ...
        '-XStretchOption %d ' ...
        '-XStretchDefaultGrouping %d ' ...
        '-MagOption	1 ' ...
        '-MagDefaultGrouping	3 ' ...
        '-BeamTiltOption	0 ' ...
        '-ResidualReportCriterion	1.0 ' ...
        '-SurfacesToAnalyze	2 ' ...
        '-RobustFitting	1 ' ...
        '-MetroFactor	0.25 ' ...
        '-MaximumCycles	1000 ' ...
        '-KFactorScaling	1.0 ' ...
        '-AxisZShift	1000 ' ...
        '-ShiftZFromOriginal      1 ' ...
        '-OutputLocalFile	%s.local ' ...
        '-TargetPatchSizeXandY	%d,%d ' ...
        '-MinSizeOrOverlapXandY	0.3,0.3 ' ...
        '-MinFidsTotalAndEachSurface	8,3 ' ...
        '-LocalRotOption	1 ' ...
        '-LocalRotDefaultGrouping	6 ' ...
        '-LocalTiltOption	0 ' ...
        '-LocalTiltDefaultGrouping	3 ' ...
        '-LocalXTiltOption %d ' ...
        '-LocalXTiltDefaultGrouping %d ' ...
        '-LocalXStretchOption %d ' ...
        '-LocalXStretchDefaultGrouping %d ' ...
        '-LocalMagOption	1 ' ...
        '-LocalMagDefaultGrouping	7  ' ...
        '-AngleOffset 0.0 %s > tiltAlign_%s.log'],...
        model_to_align,output_name,imageBinning,...
        output_name,output_name,aliLoop ,output_name,output_name,output_name,output_name,...
        output_name,input_name,x_tilt_option(1:2),x_stretch_option(1:2),output_name,ptSizeX,ptSizeY,...
        x_tilt_option(3:4), x_stretch_option(3:4),doLocal,output_name));

      if (fail) 
        error('failed in tiltalign')  
      end
    end % If cond on tiltAlign
  
  end
  
  % Transforms to full sampling (bin 1)
  [ fail ] = system(sprintf('xfproduct -scale 1,%d %s.xf %s.tltxf_nonScaled %s.xf', imageBinning,input_name,output_name,output_name));
  if (fail) 
    error('failed in xfproduct to full sampling')  
  end
  % imodtrans first scales by relative image size, then applies a
  % transformation as is, so we need to have the incremental transform at
  % the sampling rate of the next iteration as well.
  system(sprintf('awk ''{print 1.0, 0.0, 0.0, 1.0, 0.0, 0.0}''  %s.tltxf_nonScaled > dummy.xf',output_name));
  [ fail ] = system(sprintf('xfproduct -scale 1,%f dummy.xf %s.tltxf_nonScaled %s.tltxf_Scaled', imageBinning/(imageBinning - sampling_step),output_name,output_name));

  if (fail) 
    error('failed in xfproduct to incremental sampling')  
  end     

  


  
 end
end
